name: Smart Deploy to Render

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.changes.outputs.frontend }}
      backend: ${{ steps.changes.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Detect changes
        id: changes
        run: |
          echo "Checking for changes..."
          
          # Check if frontend files changed
          if git diff --name-only HEAD~1 HEAD | grep -E '^frontend/|^package\.json$|^render\.yaml$'; then
            echo "frontend=true" >> $GITHUB_OUTPUT
            echo "Frontend changes detected"
          else
            echo "frontend=false" >> $GITHUB_OUTPUT
            echo "No frontend changes"
          fi
          
          # Check if backend files changed
          if git diff --name-only HEAD~1 HEAD | grep -E '^backend/|^package\.json$|^render\.yaml$'; then
            echo "backend=true" >> $GITHUB_OUTPUT
            echo "Backend changes detected"
          else
            echo "backend=false" >> $GITHUB_OUTPUT
            echo "No backend changes"
          fi

  deploy-frontend:
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Frontend
        run: |
          echo "ðŸš€ Deploying frontend to Render..."
          # Trigger Render frontend deployment
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            https://api.render.com/v1/services/${{ secrets.RENDER_FRONTEND_SERVICE_ID }}/deploys

  deploy-backend:
    needs: detect-changes
    if: needs.detect-changes.outputs.backend == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Backend
        run: |
          echo "ðŸš€ Deploying backend to Render..."
          # Trigger Render backend deployment
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            https://api.render.com/v1/services/${{ secrets.RENDER_BACKEND_SERVICE_ID }}/deploys

  deploy-both:
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend == 'true' && needs.detect-changes.outputs.backend == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Both Services
        run: |
          echo "ðŸš€ Deploying both frontend and backend to Render..."
          # Trigger both deployments
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            https://api.render.com/v1/services/${{ secrets.RENDER_FRONTEND_SERVICE_ID }}/deploys
          
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            https://api.render.com/v1/services/${{ secrets.RENDER_BACKEND_SERVICE_ID }}/deploys
