import React, { useState, useEffect } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';
import { Home, Trophy, CheckSquare, ShoppingCart } from 'lucide-react';

interface BottomNavigationProps {
  theme: 'light' | 'dark';
  hideWhenModalOpen?: boolean;
}

export const BottomNavigation: React.FC<BottomNavigationProps> = ({
  theme,
  hideWhenModalOpen = false,
}) => {
  const navigate = useNavigate();
  const location = useLocation();
  const [mounted, setMounted] = useState(false);
  const [isModalOpen, setIsModalOpen] = useState(false);

  useEffect(() => {
    setMounted(true);
  }, []);

  // Listen for modal open/close events
  useEffect(() => {
    const handleModalOpen = () => setIsModalOpen(true);
    const handleModalClose = () => setIsModalOpen(false);

    // Listen for custom events that indicate modal state
    document.addEventListener('modal-opened', handleModalOpen);
    document.addEventListener('modal-closed', handleModalClose);

    // Also check for modal elements in the DOM
    const checkForModals = () => {
      const modals = document.querySelectorAll('[data-modal="true"]');
      const hasOpenModal = Array.from(modals).some(modal => {
        const style = window.getComputedStyle(modal);
        return style.display !== 'none' && style.visibility !== 'hidden';
      });
      setIsModalOpen(hasOpenModal);
    };

    // Check initially and set up mutation observer
    checkForModals();
    const observer = new MutationObserver(checkForModals);
    observer.observe(document.body, { childList: true, subtree: true });

    return () => {
      document.removeEventListener('modal-opened', handleModalOpen);
      document.removeEventListener('modal-closed', handleModalClose);
      observer.disconnect();
    };
  }, []);

  const navItems = [
    { icon: Home, page: '/home', label: 'Р“Р»Р°РІРЅР°СЏ' },
    { icon: Trophy, page: '/achievements', label: 'Р”РѕСЃС‚РёР¶РµРЅРёСЏ' },
    { icon: CheckSquare, page: '/tasks', label: 'Р—Р°РґР°С‡Рё' },
    { icon: ShoppingCart, page: '/shop', label: 'РњР°РіР°Р·РёРЅ' },
  ];

  const currentPage = location.pathname;

  // Don't render if modal is open and hideWhenModalOpen is true
  if (hideWhenModalOpen && isModalOpen) {
    return null;
  }

  const navigationContent = (
    <div 
      style={{ 
        position: 'fixed',      // Р вЂ™РЎРѓР ВµР С–Р Т‘Р В° Р С—Р С•Р Р†Р ВµРЎР‚РЎвЂ¦ Р С”Р С•Р Р…РЎвЂљР ВµР Р…РЎвЂљР В°
        bottom: '24px',         // Р С›РЎвЂљРЎРѓРЎвЂљРЎС“Р С— Р С•РЎвЂљ Р Р…Р С‘Р В¶Р Р…Р ВµР С–Р С• Р С”РЎР‚Р В°РЎРЏ РЎРЊР С”РЎР‚Р В°Р Р…Р В°
        left: '50%',           // Р СњР В°РЎвЂЎР В°Р В»Р С• Р С•РЎвЂљ РЎвЂ Р ВµР Р…РЎвЂљРЎР‚Р В° РЎРЊР С”РЎР‚Р В°Р Р…Р В°
        marginLeft: '-160px',   // Р РЋР СР ВµРЎвЂ°Р ВµР Р…Р С‘Р Вµ Р Т‘Р В»РЎРЏ РЎвЂљР С•РЎвЂЎР Р…Р С•Р С–Р С• РЎвЂ Р ВµР Р…РЎвЂљРЎР‚Р С‘РЎР‚Р С•Р Р†Р В°Р Р…Р С‘РЎРЏ
        zIndex: 1000,          // Р вЂ™РЎвЂ№РЎРѓР С•Р С”Р С‘Р в„– Р С—РЎР‚Р С‘Р С•РЎР‚Р С‘РЎвЂљР ВµРЎвЂљ Р Р…Р В°Р Т‘ Р С”Р С•Р Р…РЎвЂљР ВµР Р…РЎвЂљР С•Р С
        width: 'calc(100vw - 48px)',  // Р РЃР С‘РЎР‚Р С‘Р Р…Р В° РЎРЊР С”РЎР‚Р В°Р Р…Р В° Р СР С‘Р Р…РЎС“РЎРѓ Р С•РЎвЂљРЎРѓРЎвЂљРЎС“Р С—РЎвЂ№ Р С—Р С• 24px РЎРѓ Р С”Р В°Р В¶Р Т‘Р С•Р в„– РЎРѓРЎвЂљР С•РЎР‚Р С•Р Р…РЎвЂ№
        maxWidth: '320px',             // Р СљР В°Р С”РЎРѓР С‘Р СР В°Р В»РЎРЉР Р…Р В°РЎРЏ РЎв‚¬Р С‘РЎР‚Р С‘Р Р…Р В° 320px Р Т‘Р В»РЎРЏ Р В±Р С•Р В»РЎРЉРЎв‚¬Р С‘РЎвЂ¦ РЎРЊР С”РЎР‚Р В°Р Р…Р С•Р Р†
        userSelect: 'none',
        WebkitUserSelect: 'none',
        WebkitTouchCallout: 'none'
      }}
    >
      <div
        className="flex items-center justify-center"
        style={{
          backgroundColor: theme === 'dark' ? '#12151B' : '#F3F5F8', // Р СџР С•Р В»РЎС“Р С—РЎР‚Р С•Р В·РЎР‚Р В°РЎвЂЎР Р…РЎвЂ№Р в„– РЎвЂћР С•Р Р…
          borderRadius: '24px',        // Р РЋР С‘Р В»РЎРЉР Р…Р С• Р В·Р В°Р С”РЎР‚РЎС“Р С–Р В»Р ВµР Р…Р Р…РЎвЂ№Р Вµ РЎС“Р С–Р В»РЎвЂ№
          padding: '8px',              // Р вЂ™Р Р…РЎС“РЎвЂљРЎР‚Р ВµР Р…Р Р…Р С‘Р Вµ Р С•РЎвЂљРЎРѓРЎвЂљРЎС“Р С—РЎвЂ№
          gap: '12px',                 // Р В Р В°Р Р†Р Р…Р С•Р СР ВµРЎР‚Р Р…РЎвЂ№Р Вµ Р С•РЎвЂљРЎРѓРЎвЂљРЎС“Р С—РЎвЂ№ Р СР ВµР В¶Р Т‘РЎС“ Р С”Р Р…Р С•Р С—Р С”Р В°Р СР С‘
          overflow: 'hidden',          // Clip content - Р С”Р Р…Р С•Р С—Р С”Р С‘ Р Р…Р Вµ Р Р†РЎвЂ№РЎвЂ¦Р С•Р Т‘РЎРЏРЎвЂљ Р В·Р В° Р С—РЎР‚Р ВµР Т‘Р ВµР В»РЎвЂ№
          width: '100%',
          boxSizing: 'border-box'
        }}
      >
        {navItems.map((item) => {
          const Icon = item.icon;
          const isActive = currentPage === item.page;
          
          return (
            <button
              key={item.page}
              onClick={() => navigate(item.page)}
              className="relative flex items-center justify-center transition-all duration-200"
              style={{ 
                width: '44px',      // Р В¤Р С‘Р С”РЎРѓР С‘РЎР‚Р С•Р Р†Р В°Р Р…Р Р…Р В°РЎРЏ РЎв‚¬Р С‘РЎР‚Р С‘Р Р…Р В°
                height: '44px',     // Р В¤Р С‘Р С”РЎРѓР С‘РЎР‚Р С•Р Р†Р В°Р Р…Р Р…Р В°РЎРЏ Р Р†РЎвЂ№РЎРѓР С•РЎвЂљР В°
                minWidth: '44px',   // Р СљР С‘Р Р…Р С‘Р СР В°Р В»РЎРЉР Р…Р В°РЎРЏ РЎв‚¬Р С‘РЎР‚Р С‘Р Р…Р В°
                minHeight: '44px',  // Р СљР С‘Р Р…Р С‘Р СР В°Р В»РЎРЉР Р…Р В°РЎРЏ Р Р†РЎвЂ№РЎРѓР С•РЎвЂљР В°
                maxWidth: '44px',   // Р СљР В°Р С”РЎРѓР С‘Р СР В°Р В»РЎРЉР Р…Р В°РЎРЏ РЎв‚¬Р С‘РЎР‚Р С‘Р Р…Р В° (Р С—РЎР‚Р ВµР Т‘Р С•РЎвЂљР Р†РЎР‚Р В°РЎвЂ°Р В°Р ВµРЎвЂљ РЎР‚Р В°РЎРѓРЎвЂљРЎРЏР С–Р С‘Р Р†Р В°Р Р…Р С‘Р Вµ)
                maxHeight: '44px',  // Р СљР В°Р С”РЎРѓР С‘Р СР В°Р В»РЎРЉР Р…Р В°РЎРЏ Р Р†РЎвЂ№РЎРѓР С•РЎвЂљР В°
                borderRadius: '50%', // Р С™РЎР‚РЎС“Р С–Р В»Р В°РЎРЏ РЎвЂћР С•РЎР‚Р СР В°
                flexShrink: 0,      // Hug contents - Р С”Р Р…Р С•Р С—Р С”Р С‘ Р Р…Р Вµ РЎРѓР В¶Р С‘Р СР В°РЎР‹РЎвЂљРЎРѓРЎРЏ
                flexGrow: 0         // Р С™Р Р…Р С•Р С—Р С”Р С‘ Р Р…Р Вµ РЎР‚Р В°РЎРѓРЎвЂљРЎРЏР С–Р С‘Р Р†Р В°РЎР‹РЎвЂљРЎРѓРЎРЏ
              }}
            >
              {/* Active indicator */}
              {isActive && (
                <div 
                  className="absolute rounded-full"
                  style={{
                    width: '36px',              // Р СњР ВµР СР Р…Р С•Р С–Р С• Р СР ВµР Р…РЎРЉРЎв‚¬Р Вµ Р С”Р Р…Р С•Р С—Р С”Р С‘
                    height: '36px',
                    backgroundColor: theme === 'dark' 
                      ? 'rgba(43, 130, 255, 0.12)'  // Р СћР ВµР СР Р…Р В°РЎРЏ РЎвЂљР ВµР СР В°: 12% Р С—РЎР‚Р С•Р В·РЎР‚Р В°РЎвЂЎР Р…Р С•РЎРѓРЎвЂљР С‘
                      : 'rgba(43, 130, 255, 0.10)'  // Р РЋР Р†Р ВµРЎвЂљР В»Р В°РЎРЏ РЎвЂљР ВµР СР В°: 10% Р С—РЎР‚Р С•Р В·РЎР‚Р В°РЎвЂЎР Р…Р С•РЎРѓРЎвЂљР С‘
                  }}
                />
              )}
              
              {/* Icon */}
              <Icon 
                className="relative z-10 transition-colors duration-200"
                style={{
                  width: '24px',   // Р С›Р С—РЎвЂљР С‘Р СР В°Р В»РЎРЉР Р…РЎвЂ№Р в„– РЎР‚Р В°Р В·Р СР ВµРЎР‚ Р Т‘Р В»РЎРЏ Р С”РЎР‚РЎС“Р С–Р В»РЎвЂ№РЎвЂ¦ Р С”Р Р…Р С•Р С—Р С•Р С” 44px
                  height: '24px',
                  color: isActive 
                    ? '#2B82FF'                                    // Р С’Р С”РЎвЂљР С‘Р Р†Р Р…Р В°РЎРЏ: РЎРѓР С‘Р Р…Р С‘Р в„– Apple
                    : theme === 'dark' ? '#A7B0BD' : '#6B7280'    // Р СњР ВµР В°Р С”РЎвЂљР С‘Р Р†Р Р…Р В°РЎРЏ: РЎРѓР ВµРЎР‚РЎвЂ№Р в„– Р С—Р С• РЎвЂљР ВµР СР Вµ
                }}
              />
            </button>
          );
        })}
      </div>
    </div>
  );

  // Р В Р ВµР Р…Р Т‘Р ВµРЎР‚Р С‘Р С Р Р…Р В°Р Р†Р С‘Р С–Р В°РЎвЂ Р С‘РЎР‹
  return navigationContent;
};