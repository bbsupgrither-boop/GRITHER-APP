import { promises as fs } from 'fs';
import { glob } from 'glob';

// –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–¥–∏—Ä–æ–≤–∫–∏
async function fixEncoding() {
  console.log('üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ —Ñ–∞–π–ª–æ–≤...');
  
  const files = await glob('frontend/**/*.{ts,tsx,js,jsx,json}', { nodir: true });
  let fixedCount = 0;
  
  for (const file of files) {
    try {
      const content = await fs.readFile(file, 'utf8');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫—Ä–∞–∫–æ–∑—è–±—Ä
      if (content.includes('–†') && content.includes('–í') && content.includes('–°')) {
        console.log(`‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –∫—Ä–∞–∫–æ–∑—è–±—Ä—ã –≤ —Ñ–∞–π–ª–µ: ${file}`);
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
      }
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ ${file}:`, error.message);
    }
  }
  
  console.log(`‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${files.length}`);
}

fixEncoding().catch(console.error);
